{
    "dbConnectionSettings": {
        "host": "localhost",
        "userName": "root",
        "password": "",
        "name": "anime-db"
    },
    "querySettings": {
        "getTopWatchedAnime": {
            "query": "SELECT animelist.anime_id AS animeId, animelist.name, animelist.genre AS genre, animelist.type AS type, COUNT(ratinglist.user_id) AS views, animelist.episodes, AVG(ratinglist.rating) AS rating FROM `ratinglist` JOIN animelist ON ratinglist.anime_id = animelist.anime_id GROUP BY ratinglist.anime_id ORDER BY views DESC LIMIT ?",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            },
            "schemaName": "getTopWatchedAnime"
        },
        "getNumberOfMaleFemaleUsers": {
            "query": "SELECT (SELECT COUNT(ratinglist.user_id) FROM ratinglist WHERE ratinglist.anime_id = ?) AS totalViewers, (SELECT COUNT(gender) FROM ratinglist JOIN userlist ON userlist.user_id = ratinglist.user_id WHERE userlist.gender = 'Male' AND ratinglist.anime_id = ?) AS male, (SELECT COUNT(gender) FROM ratinglist JOIN userlist ON userlist.user_id = ratinglist.user_id WHERE userlist.gender = 'Female' AND ratinglist.anime_id = ?) AS female FROM animelist JOIN ratinglist ON ratinglist.anime_id = animelist.anime_id WHERE ratinglist.anime_id = ? GROUP BY Male",
            "XMLSettings": {
                "groupedNodeName": "gendersDifference",
                "rootNodeName": "root"
            },
            "schemaName": "getAnimeGenderComparison"
        },
        "getTotalNumberOfMaleFemaleViewers": {
            "query": "SELECT ( SELECT COUNT(ratinglist.user_id) FROM ratinglist ) AS totalViewers, ( SELECT COUNT(gender) FROM ratinglist JOIN userlist ON userlist.user_id = ratinglist.user_id WHERE userlist.gender = 'Male' ) AS male, ( SELECT COUNT(gender) FROM ratinglist JOIN userlist ON userlist.user_id = ratinglist.user_id WHERE userlist.gender = 'Female' ) AS female FROM animelist JOIN ratinglist ON ratinglist.anime_id = animelist.anime_id GROUP BY Male",
            "XMLSettings": {
                "groupedNodeName": "gendersDifference",
                "rootNodeName": "root"
            },
            "schemaName": "getTotalAnimeGenderComparison"
        },
         "getAnimeUserStatistics": {
            "query": "SELECT userlist.user_id AS userId, userlist.username AS username, userlist.user_completed AS completed, userlist.user_dropped AS dropped, userlist.user_onhold AS onHold, userlist.user_plantowatch AS planToWatch, userlist.user_days_spent_watching AS watchTime, userlist.stats_rewatched AS rewatched, userlist.location, userlist.gender, userlist.join_date AS joinDate, ratinglist.rating, TIMESTAMPDIFF( YEAR, userlist.birth_date, '2018-06-29' ) AS age FROM `ratinglist` JOIN userlist ON ratinglist.user_id = userlist.user_id WHERE anime_id = ?",
            "XMLSettings": {
                "groupedNodeName": "user",
                "rootNodeName": "root"
            },
            "schemaName": "getAnimeUserStatistics"
        },
        "getUsers": {
            "query": "SELECT user_id AS userId, username, birth_date AS birthDate, gender, `location` FROM userlist",
            "XMLSettings": {
                "groupedNodeName": "users",
                "rootNodeName": "root"
            }
        },
        "getUser": {
            "query": "SELECT user_id AS userId, username, birth_date AS birthDate, gender, `location` FROM userlist WHERE user_id = ?",
            "XMLSettings": {
                "groupedNodeName": "user",
                "rootNodeName": "root"
            }
        },
        "getAnimes": {
            "query": "SELECT animelist.anime_id AS animeId, animelist.name, animelist.genre AS genre, animelist.type AS type, COUNT(ratinglist.user_id) AS views, animelist.episodes, AVG(ratinglist.rating) AS rating FROM `ratinglist` JOIN animelist ON ratinglist.anime_id = animelist.anime_id GROUP BY ratinglist.anime_id",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            }
        },
        "getAnimeOld": {
            "query": "SELECT anime_id AS animeId, name, genre, type, episodes FROM animelist WHERE anime_id = ?",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            }
        },
        "getAnime": {
            "query": "SELECT animelist.anime_id AS animeId, animelist.name, animelist.genre AS genre, animelist.type AS type, NULLIF(COUNT(ratinglist.user_id), 0) AS views, animelist.episodes, AVG(ratinglist.rating) AS rating FROM `ratinglist` JOIN animelist ON ratinglist.anime_id = animelist.anime_id WHERE animelist.anime_id = ?",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            },
            "schemaName": "getAnime"
        },
        "getRatings": {
            "query": "SELECT * FROM `ratinglist` ORDER BY `user_id`",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            }
        },
        "getAnimeRatings": {
            "query": "SELECT ratinglist.anime_id AS animeId, ratinglist.user_id as userId, ratinglist.rating AS rating FROM `ratinglist` WHERE `anime_id` = ? AND `rating` > ?",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            }
        },
        "getUserRatings": {
            "query": "SELECT * FROM `ratinglist` WHERE `user_id` = ? AND `rating` > 1",
            "XMLSettings": {
                "groupedNodeName": "anime",
                "rootNodeName": "root"
            }
        },
        "addAnime": {
            "query": "INSERT INTO `animelist`(`name`, `genre`, `type`, `episodes`, `rating`, `members`) VALUES (?,?,?,?,?,?)"
        },
        "updateAnime": {
            "query": "UPDATE `animelist` SET `name`=?,`genre`=?,`type`=?,`episodes`=?,`rating`=?,`members`=? WHERE `anime_id`= ?"
        },
        "deleteAnime": {
            "query": "DELETE FROM `animelist` WHERE `anime_id` = ?;"
        }
    }
}